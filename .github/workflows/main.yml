#---------------------------------------------------------------------
# GitHub Actions to Protect CI/CD Pipelines
#
# Version      Date        Info
# 1.0          2019        Initial Version
#
# Made by Felipe Costa
#---------------------------------------------------------------------
name: Protect CI/CD Pipelines
env:
  AWS_REGION_NAME: "us-east-1"

on: 
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master

jobs:
    CI_Pipeline:
       runs-on: ubuntu-latest
       steps:
         
         - name: Git clone our repository
           uses: actions/checkout@v2
            
         - name: Source Code Test
           run: echo Source Code Test
           
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET }}
             aws-region           : ${{ env.AWS_REGION_NAME }}

         - name: Container Build
           run : docker build -t web-app:latest .
          
         - name: Login to ECR
           run: $(aws ecr get-login --no-include-email --region ${{ env.AWS_REGION_NAME }})
         
         - name: Tag Docker Image
           run: docker tag web-app:latest ${{ secrets.ECR_LOGIN }}/web-app
           
         - name: Cloud One Container Image Scan
           run: echo Cloud One Container Image Scan
         
         - name: Push Docker Image to ECR
           run: docker push ${{ secrets.ECR_LOGIN }}/web-app
         
         - name: Print nice message on completion of CI Pipeline
           run : echo "CI Pipeline part finished successfully"
           
    CD_Pipeline:
       runs-on: ubuntu-latest
       needs: [CI_Pipeline]
       
       steps:
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET }}
             aws-region           : ${{ env.AWS_REGION_NAME }}
         
         - name: Dev Tests
           run: echo Dev Tests
      
         - name: Unit Tests
           run: echo Unit Tests
           
         - name: Print nice message on completion of CD Pipeline
           run : echo "CD Pipeline part finished successfully" 
 
           
    CC_Scan:
       runs-on: ubuntu-latest
       needs: [CD_Pipeline]
       strategy:
        matrix:
         node-version: [12.x]
       
       steps:
         - uses: actions/checkout@v2
         - name: Use Node.js ${{ matrix.node-version }}
           uses: actions/setup-node@v1
           with:
            node-version: ${{ matrix.node-version }}
         
         - name: Install node
         - run: npm install
           
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           
         - name: AWS CF Deploy Tests
           run:  aws cloudformation validate-template --template-body file://cfn.yml
      
         - name: Conformity CF Deploy Tests
           run: echo Conformity CF Deploy Tests
    Deploy:
       runs-on: ubuntu-latest
       needs: [CD_Pipeline]
       steps:
        
        - name: Deploy to Fargate
          run: echo Deploy to Fargate
    
    Slack Notification:
       runs-on: ubuntu-latest
       needs: [CD_Pipeline]
       steps:
 
       - name: Slack Notification
         run: echo Slack Notification 
