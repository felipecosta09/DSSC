apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
      labels:
        app: java-app
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: java-app
        image: felipecosta09/java-app:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: java-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: java-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
      labels:
        app: django-app
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: django-app
        image: felipecosta09/django-app:latest
        ports:
         - containerPort: 8000
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: django-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: django-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
      labels:
        app: node-app
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: node-app
        image: felipecosta09/node-app:latest
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: node-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: node-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnet-core-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnet-core-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
      labels:
        app: dotnet-core-app
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: dotnet-core-app
        image: felipecosta09/dotnet-core-app
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: dotnet-core-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: dotnet-core-app